name: Deploy to Google PlayüöÄ

on:
  push:
    branches:
      - main
      - dev

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Validate secrets
        run: |
          if [ -z "${{ secrets.KEYSTORE_BASE64 }}" ] || [ -z "${{ secrets.KEY_ALIAS }}" ] || [ -z "${{ secrets.KEY_PASSWORD }}" ] || [ -z "${{ secrets.GOOGLE_PLAY_JSON }}" ]; then
            echo "Error: One or more secrets are missing"
            exit 1
          fi
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Install Ionic CLI
        run: npm install -g @ionic/cli

      - name: Build app
        run: npm run build

      - name: Sync Capacitor
        run: npx cap sync android

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'oracle'

      - name: Decode Keystore
        run: echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > android/app/my-release-key.jks

      - name: Build Android App Bundle
        working-directory: android
        run: |
          ./gradlew bundleRelease

      - name: Sign AAB
        id: sign
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: android/app/build/outputs/bundle/release
          signingKeyBase64: ${{ secrets.KEYSTORE_BASE64 }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Create service_account.json
        run: echo '${{ secrets.GOOGLE_PLAY_JSON }}' > service_account.json

      # Deploy to Google Play
      - name: Deploy to Play Store
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: service_account.json
          packageName: com.breviarium.app
          releaseFiles: android/app/build/outputs/bundle/release/app-release.aab
          track: ${{ github.ref == 'refs/heads/main' && 'production' || 'internal' }}
          whatsNewDirectory: distribution/

  update-version-minor:
    name: update minor version ‚öíÔ∏èÔ∏è
    runs-on: ubuntu-latest
    needs: build-and-deploy
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Increment version in package.json & Commit
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          npm version minor --git-tag-version false
          chmod +x ./.github/workflows/script.sh
          ./.github/workflows/script.sh
          echo "Script executed ‚úÖ"
          git add package.json package-lock.json android/app/build.gradle ios/App/App.xcodeproj/project.pbxproj
          git commit -m "ci: ‚öôÔ∏è bump version to $(node -p "require('./package.json').version")"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-version-patch:
    name: update patch version ‚öíÔ∏èÔ∏è
    runs-on: ubuntu-latest
    needs: build-and-deploy
    if: github.ref == 'refs/heads/dev'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Increment version in package.json & Commit
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          npm version patch --git-tag-version false
          chmod +x ./.github/workflows/script.sh
          ./.github/workflows/script.sh
          echo "Script executed ‚úÖ"
          git add package.json package-lock.json android/app/build.gradle ios/App/App.xcodeproj/project.pbxproj
          git commit -m "ci: ‚öôÔ∏è bump version to $(node -p "require('./package.json').version")"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}